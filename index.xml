<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Herbie&#39;s Blog</title>
    <link>https://www.herbie.dev/</link>
    <description>Recent content on Herbie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2019 20:40:39 -0700</lastBuildDate>
    
	<atom:link href="https://www.herbie.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WebAuthn Basic Web Client/Server</title>
      <link>https://www.herbie.dev/blog/webauthn-basic-web-client-server/</link>
      <pubDate>Mon, 15 Apr 2019 20:40:39 -0700</pubDate>
      
      <guid>https://www.herbie.dev/blog/webauthn-basic-web-client-server/</guid>
      <description>In this tutorial we&amp;rsquo;ll build a basic WebAuthn web client/server in go using Duo Labs&amp;rsquo; awesome WebAuthn library. We&amp;rsquo;ll also briefly go over the WebAuthn API. All code for this tutorial can be found here. Note this tutorial is not meant to be used in production but more as a starting point to building a functioning WebAuthn server and client, and as an introduction to the WebAuthn API.
What Is WebAuthn WebAuthn is a standard that enables passwordless authentication (aka login) in the browser (and beyond).</description>
    </item>
    
    <item>
      <title>Network of Trusted Devices Example (Illustrations)</title>
      <link>https://www.herbie.dev/blog/network-of-trusted-devices-example/</link>
      <pubDate>Sun, 07 Apr 2019 07:35:24 -0700</pubDate>
      
      <guid>https://www.herbie.dev/blog/network-of-trusted-devices-example/</guid>
      <description>Below is an example of what a passwordless world via a network of trusted devices could look like. It follows Bob, a new employee of Foobar Corp, along with Alice, Foobar&amp;rsquo;s trusty head of IT. For more on a passwordless world, see my previous post Arriving At A Passwordless Future.
Bob&amp;rsquo;s First Day On Bob&amp;rsquo;s first day Alice gives him a brand new MacBook with Touch ID. Alice tells Bob:</description>
    </item>
    
    <item>
      <title>Arriving At A Passwordless Future</title>
      <link>https://www.herbie.dev/blog/arriving-at-a-passwordless-future/</link>
      <pubDate>Thu, 04 Apr 2019 10:32:57 -0700</pubDate>
      
      <guid>https://www.herbie.dev/blog/arriving-at-a-passwordless-future/</guid>
      <description>Look Familiar?
Below is an abridged (and prettier) version of a white paper I&amp;rsquo;m working on. I outline my reasoning around the password problem, how various existing solutions attempt to solve it (spoiler alert: they don&amp;rsquo;t!), and finally how passwordless solutions on the horizon might once and for all solve the password problem.
Intro Passwords suck. They&amp;rsquo;re incredibly frustrating to use. They&amp;rsquo;re also incredibly insecure. Stolen and weak passwords accounted for 81% of data breaches in 2017 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.herbie.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.herbie.dev/about/</guid>
      <description>About Me Welcome! My name is Herbie Bolimovsky and I&amp;rsquo;m a security software engineer living in the Bay Area. I am currently working on passwordless authentication solutions at passwordless.consulting. I formerly worked at Apple within various security teams including an &amp;lsquo;applied crypto&amp;rsquo; team responsible for the internal Certificate Authority (CA) and internal encryption as a service offering, the pen testing team setting up a secrets management service, and the Kubernetes team working on general security.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.herbie.dev/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.herbie.dev/projects/</guid>
      <description>Projects Coming soon!</description>
    </item>
    
  </channel>
</rss>